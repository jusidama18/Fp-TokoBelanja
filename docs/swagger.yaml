basePath: /
definitions:
  helper.Response:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
  input.CategoryCreateInput:
    properties:
      type:
        type: string
    required:
    - type
    type: object
  input.CategoryPatchInput:
    properties:
      type:
        type: string
    required:
    - type
    type: object
  input.CreateTransactionRequest:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  input.ProductCreateInput:
    properties:
      category_Id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
    required:
    - price
    - stock
    - title
    type: object
  input.ProductPutInput:
    properties:
      category_Id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
    required:
    - price
    - stock
    - title
    type: object
  input.UserLoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  input.UserPatchTopUpInput:
    properties:
      balance:
        maximum: 100000000
        minimum: 0
        type: integer
    required:
    - balance
    type: object
  input.UserRegisterInput:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  response.CategoryCreateResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      sold_product_amount:
        type: integer
      type:
        type: string
    type: object
  response.CategoryGetResponse:
    properties:
      Products:
        items:
          $ref: '#/definitions/response.CategoryProduct'
        type: array
      created_at:
        type: string
      id:
        type: integer
      sold_product_amount:
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
  response.CategoryPatchResponse:
    properties:
      id:
        type: integer
      sold_product_amount:
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
  response.CategoryProduct:
    properties:
      created_at:
        type: string
      id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  response.MyTransactionResponse:
    properties:
      id:
        type: integer
      product:
        $ref: '#/definitions/response.TransactionProduct'
      product_id:
        type: integer
      quantity:
        type: integer
      total_price:
        type: integer
      user_id:
        type: integer
    type: object
  response.ProductPutResponse:
    properties:
      product:
        $ref: '#/definitions/response.ProductPutResponseBody'
    type: object
  response.ProductPutResponseBody:
    properties:
      CategoryId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  response.ProductResponse:
    properties:
      category_Id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
    type: object
  response.TransactionBillResponse:
    properties:
      product_title:
        type: string
      quantity:
        type: integer
      total_price:
        type: integer
    type: object
  response.TransactionProduct:
    properties:
      category_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      price:
        type: integer
      stock:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  response.TransactionUser:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  response.UserLoginResponse:
    properties:
      token:
        type: string
    type: object
  response.UserPatchTopUpResponse:
    properties:
      message:
        type: string
    type: object
  response.UserRegisterResponse:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      password:
        type: string
    type: object
  response.UserTransactionResponse:
    properties:
      id:
        type: integer
      product:
        $ref: '#/definitions/response.TransactionProduct'
      product_id:
        type: integer
      quantity:
        type: integer
      total_price:
        type: integer
      user:
        $ref: '#/definitions/response.TransactionUser'
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: hacktiv@swagger.io
    name: API Support
  description: This is a API webservice to manage TokoBelanja API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: TokoBelanja-API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get All Category with Product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.CategoryGetResponse'
                  type: array
              type: object
      summary: Get All Category with Product
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create Category by Data Provided
      parameters:
      - description: Create Category
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.CategoryCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.CategoryCreateResponse'
              type: object
      summary: Create Category
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Category by Data Provided
      parameters:
      - description: Delete Category
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Category
      tags:
      - Categories
    patch:
      consumes:
      - application/json
      description: Patch Category by Data Provided
      parameters:
      - description: Patch Category
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.CategoryPatchInput'
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.CategoryPatchResponse'
              type: object
      summary: Patch Category
      tags:
      - Categories
  /products:
    get:
      consumes:
      - application/json
      description: Get All Product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.ProductResponse'
                  type: array
              type: object
      summary: Get All Product
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Create Product by Data Provided
      parameters:
      - description: Create Product
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.ProductCreateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ProductResponse'
              type: object
      summary: Create Product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product by Data Provided
      parameters:
      - description: Delete Product
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Put Product by Data Provided
      parameters:
      - description: Put Product
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.ProductPutInput'
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.ProductPutResponse'
              type: object
      summary: Put Product
      tags:
      - Products
  /transactions:
    post:
      consumes:
      - application/json
      description: Create Transaction by Data Provided
      parameters:
      - description: Create Transaction
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.TransactionBillResponse'
              type: object
      summary: Create Transaction
      tags:
      - Transactions
  /transactions/my-transactions:
    get:
      consumes:
      - application/json
      description: Get My Transaction
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.MyTransactionResponse'
                  type: array
              type: object
      summary: Get My Transaction
      tags:
      - Transactions
  /transactions/user-transactions:
    get:
      consumes:
      - application/json
      description: Get All User Transaction
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/response.UserTransactionResponse'
                  type: array
              type: object
      summary: Get All User Transaction
      tags:
      - Transactions
  /users/admin:
    post:
      consumes:
      - application/json
      description: Register New Admin by Data Provided
      parameters:
      - description: Register Admin
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.UserRegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserRegisterResponse'
              type: object
      summary: Register New Admin
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login Account by Data Provided
      parameters:
      - description: Login Account
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.UserLoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserLoginResponse'
              type: object
      summary: Login Account
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register New User by Data Provided
      parameters:
      - description: Register User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.UserRegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserRegisterResponse'
              type: object
      summary: Register New User
      tags:
      - Users
  /users/topup:
    patch:
      consumes:
      - application/json
      description: Patch User's Topup by Data Provided
      parameters:
      - description: Patch User's Topup
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/input.UserPatchTopUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/helper.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.UserPatchTopUpResponse'
              type: object
      summary: Patch User's Topup
      tags:
      - Users
swagger: "2.0"
